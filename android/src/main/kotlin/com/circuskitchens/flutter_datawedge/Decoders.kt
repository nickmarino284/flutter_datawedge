package com.circuskitchens.flutter_datawedge

import com.circuskitchens.flutter_datawedge.pigeon.Decoder

val stringToDecoder = mapOf<String,Decoder>(
    "decoder_australian_postal" to  Decoder.AUSTRALIAN_POSTAL,
    "decoder_aztec"   to  Decoder.AZTEC,
    "decoder_canadian_postal"   to  Decoder.CANADIAN_POSTAL,
    "decoder_chinese_2of5"   to  Decoder.CHINESE2OF5,
    "decoder_codabar"   to  Decoder.CODABAR,
    "decoder_code11"   to  Decoder.CODE11,
    "decoder_code32"   to  Decoder.CODE32,
    "decoder_code39"   to  Decoder.CODE39,
    "decoder_code93"   to  Decoder.CODE93,
    "decoder_code128"   to  Decoder.CODE128,
    "decoder_composite_ab"   to  Decoder.COMPOSITE_AB,
    "decoder_composite_c"   to  Decoder.COMPOSITE_C,
    "decoder_datamatrix"   to  Decoder.DATAMATRIX,
    "decoder_signature"   to  Decoder.SIGNATURE,
    "decoder_d2of5"   to  Decoder.D2OF5,
    "decoder_dotcode"   to  Decoder.DOTCODE,
    "decoder_dutch_postal"   to  Decoder.DUTCH_POSTAL,
    "decoder_ean8"   to  Decoder.EAN8,
    "decoder_ean13"   to  Decoder.EAN13,
    "decoder_finnish_postal_4s"   to  Decoder.FINNISH_POSTAL4S,
    "decoder_grid_matrix"   to  Decoder.GRID_MATRIX,
    "decoder_gs1_databar"   to  Decoder.GS1DATABAR,
    "decoder_gs1_databar_lim"   to  Decoder.GS1DATABAR_LIM,
    "decoder_gs1_databar_exp"   to  Decoder.GS1DATABAR_EXP,
    "decoder_gs1_datamatrix"   to  Decoder.GS1DATAMATRIX,
    "decoder_gs1_qrcode"   to  Decoder.GS1QRCODE,
    "decoder_hanxin"   to  Decoder.HANXIN,
    "decoder_i2of5"   to  Decoder.I2OF5,
    "decoder_japanese_postal"   to  Decoder.JAPANESE_POSTAL,
    "decoder_korean_3of5"   to  Decoder.KOREAN3OF5,
    "decoder_mailmark"   to  Decoder.MAILMARK,
    "decoder_matrix_2of5"   to  Decoder.MATRIX2OF5,
    "decoder_maxicode"   to  Decoder.MAXICODE,
    "decoder_micr_e13b"   to  Decoder.MICR_E13B,
    "decoder_micropdf"   to  Decoder.MICROPDF,
    "decoder_microqr"   to  Decoder.MICROQR,
    "decoder_msi"   to  Decoder.MSI,
    "decoder_ocr_a"   to  Decoder.OCR_A,
    "decoder_ocr_b"   to  Decoder.OCR_B,
    "decoder_pdf417"   to  Decoder.PDF417,
    "decoder_qrcode"   to  Decoder.QRCODE,
    "decoder_tlc39"   to  Decoder.TLC39,
    "decoder_trioptic39"   to  Decoder.TRIOPTIC39,
    "decoder_uk_postal"   to  Decoder.UK_POSTAL,
    "decoder_us_currency"   to  Decoder.US_CURRENCY,
    "decoder_usplanet"   to  Decoder.USPLANET,
    "decoder_us_postal"   to  Decoder.US_POSTAL,
    "decoder_uspostnet"   to  Decoder.USPOSTNET,
    "decoder_upca"   to  Decoder.UPCA,
    "decoder_upce0"   to  Decoder.UPCE0,
    "decoder_upce1"   to  Decoder.UPCE1,
    "decoder_us4state"   to  Decoder.US4STATE,
    "decoder_us4state_fics"   to  Decoder.US4STATE_FICS,
)

val decoderToString = stringToDecoder.map { it.value to it.key }.toMap()
